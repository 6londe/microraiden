{
  "ECVerify": {
    "abi": [],
    "bytecode": "0x60606040523415600b57fe5b5b60338060196000396000f30060606040525bfe00a165627a7a72305820221fe9ddc5a363197f23c51c9b98ebf5c6294f29a0ddeed89a6aadbb9fedfcdd0029",
    "bytecode_runtime": "0x60606040525bfe00a165627a7a72305820221fe9ddc5a363197f23c51c9b98ebf5c6294f29a0ddeed89a6aadbb9fedfcdd0029",
    "devdoc": {
      "methods": {}
    },
    "metadata": {
      "compiler": {
        "version": "0.4.11+commit.68ef5810"
      },
      "language": "Solidity",
      "output": {
        "abi": [],
        "devdoc": {
          "methods": {}
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts223/lib/ECVerify.sol": "ECVerify"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts223/RDNToken/ERC223ReceivingContract.sol": {
          "keccak256": "0x6956470bf8203459c7866f3f5dc5bc401ae3d08205705eb4eba20e72aa4265cc",
          "urls": [
            "bzzr://5c2e057d17084712fa075825345972b8d455186fe9726aeeed7f97606b4300d0"
          ]
        },
        "contracts223/RDNToken/RDNToken.sol": {
          "keccak256": "0xe71c9b38c2442e9499332b47a54476b1ba70d5062ed0fb3eb57a06c39d4a4e4e",
          "urls": [
            "bzzr://809dd92733e832627bb3779521655f7b607f737b7af6e8dd3a6f9a3133c58b6a"
          ]
        },
        "contracts223/RDNToken/SafeMath.sol": {
          "keccak256": "0xc6529d7cab3f5d3ccb57e4a04459f84943b3dea32ec33c96b0ccef5b2b7fb4ae",
          "urls": [
            "bzzr://554b9cf1fa63378a74efb3c0acc92a1aab164262118306e1b7dc60e7c7e26496"
          ]
        },
        "contracts223/RDNToken/StandardToken.sol": {
          "keccak256": "0x6f02ec0f17b828c4d4c1eeb320f22afc9bd6778d08677ca9588feec33e635bc0",
          "urls": [
            "bzzr://d7ae42c4b423ee18192d729db99a56b009311542622c90251b429800f4677bc7"
          ]
        },
        "contracts223/RDNToken/Token.sol": {
          "keccak256": "0xfbde744369794497835f11d3f25a09216c7b7adb33d25184a54a2652bdba0a3d",
          "urls": [
            "bzzr://3d6b64a97a861760ef67f8508faf6a989df97c6172f6d303ff97ed531e0b7803"
          ]
        },
        "contracts223/RaidenMicroTransferChannels.sol": {
          "keccak256": "0x085a85a8446b51ae374ef3124aa8bb4eed4bacb2b5612705cc22eb77950f9668",
          "urls": [
            "bzzr://f7e16327e60039f3aeb1bbb126b72ecd6cd3c55227ff5972aa5aeb50662a28df"
          ]
        },
        "contracts223/lib/ECVerify.sol": {
          "keccak256": "0xef523df442062c4439e9e9642f61af55dbd02b08f8b9b767c86f94c35db6320c",
          "urls": [
            "bzzr://c4a08d4bf87d9e2b64847654705455f4520658fd7b4768c597eee1e3ff2e257a"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "ERC223ReceivingContract": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "tokenFallback",
        "outputs": [],
        "payable": false,
        "type": "function"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {}
    },
    "metadata": null,
    "userdoc": {
      "methods": {}
    }
  },
  "RDNToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "version",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_initialAmount",
            "type": "uint256"
          },
          {
            "name": "_tokenName",
            "type": "string"
          },
          {
            "name": "_decimalUnits",
            "type": "uint8"
          },
          {
            "name": "_tokenSymbol",
            "type": "string"
          }
        ],
        "payable": false,
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052604060405190810160405280600481526020017f48302e310000000000000000000000000000000000000000000000000000000081525060059080519060200190610050929190610131565b50341561005957fe5b60405162000f1c38038062000f1c833981016040528080519060200190919080518201919060200180519060200190919080518201919050505b83600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508360008190555082600290805190602001906100f4929190610131565b5081600360006101000a81548160ff021916908360ff1602179055508060049080519060200190610126929190610131565b505b505050506101d6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785556101a0565b828001600101855582156101a0579182015b8281111561019f578251825591602001919060010190610184565b5b5090506101ad91906101b1565b5090565b6101d391905b808211156101cf5760008160009055506001016101b7565b5090565b90565b610d3680620001e66000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461008e57806318160ddd14610127578063313ce5671461014d57806354fd4d501461017957806370a082311461021257806395d89b411461025c578063a9059cbb146102f5578063be45fd621461034c575bfe5b341561009657fe5b61009e6103e6565b60405180806020018281038252838181518152602001915080519060200190808383600083146100ed575b8051825260208311156100ed576020820191506020810190506020830392506100c9565b505050905090810190601f1680156101195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561012f57fe5b610137610484565b6040518082815260200191505060405180910390f35b341561015557fe5b61015d61048a565b604051808260ff1660ff16815260200191505060405180910390f35b341561018157fe5b61018961049d565b60405180806020018281038252838181518152602001915080519060200190808383600083146101d8575b8051825260208311156101d8576020820191506020810190506020830392506101b4565b505050905090810190601f1680156102045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021a57fe5b610246600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061053b565b6040518082815260200191505060405180910390f35b341561026457fe5b61026c610585565b60405180806020018281038252838181518152602001915080519060200190808383600083146102bb575b8051825260208311156102bb57602082019150602081019050602083039250610297565b505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102fd57fe5b610332600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610623565b604051808215151515815260200191505060405180910390f35b341561035457fe5b6103cc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061096b565b604051808215151515815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b505050505081565b60005481565b600360009054906101000a900460ff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b505050505081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050505081565b600060006000610631610cf6565b853b925061068785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cab90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061071c85600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc590919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115610897578591508173ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018060200182810382528381815181526020019150805190602001908083836000831461083c575b80518252602083111561083c57602082019150602081019050602083039250610818565b505050905090810190601f1680156108685780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561088557fe5b6102c65a03f1151561089357fe5b5050505b806040518082805190602001908083835b602083106108cb57805182526020820191506020810190506020830392506108a8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600193505b50505092915050565b600060006000853b91506109c785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cab90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a5c85600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc590919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000821115610bd7578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610b7c575b805182526020831115610b7c57602082019150602081019050602083039250610b58565b505050905090810190601f168015610ba85780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610bc557fe5b6102c65a03f11515610bd357fe5b5050505b836040518082805190602001908083835b60208310610c0b5780518252602082019150602081019050602083039250610be8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600192505b50509392505050565b6000610cb983831115610ce5565b81830390505b92915050565b600060008284019050610cda84821015610ce5565b8091505b5092915050565b801515610cf25760006000fd5b5b50565b6020604051908101604052806000815250905600a165627a7a72305820f898796ba64854cac96152806155c1ca5d0557dd937589cc95287a98fcd567a80029",
    "bytecode_runtime": "0x6060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461008e57806318160ddd14610127578063313ce5671461014d57806354fd4d501461017957806370a082311461021257806395d89b411461025c578063a9059cbb146102f5578063be45fd621461034c575bfe5b341561009657fe5b61009e6103e6565b60405180806020018281038252838181518152602001915080519060200190808383600083146100ed575b8051825260208311156100ed576020820191506020810190506020830392506100c9565b505050905090810190601f1680156101195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561012f57fe5b610137610484565b6040518082815260200191505060405180910390f35b341561015557fe5b61015d61048a565b604051808260ff1660ff16815260200191505060405180910390f35b341561018157fe5b61018961049d565b60405180806020018281038252838181518152602001915080519060200190808383600083146101d8575b8051825260208311156101d8576020820191506020810190506020830392506101b4565b505050905090810190601f1680156102045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021a57fe5b610246600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061053b565b6040518082815260200191505060405180910390f35b341561026457fe5b61026c610585565b60405180806020018281038252838181518152602001915080519060200190808383600083146102bb575b8051825260208311156102bb57602082019150602081019050602083039250610297565b505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102fd57fe5b610332600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610623565b604051808215151515815260200191505060405180910390f35b341561035457fe5b6103cc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061096b565b604051808215151515815260200191505060405180910390f35b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b505050505081565b60005481565b600360009054906101000a900460ff1681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b505050505081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b505050505081565b600060006000610631610cf6565b853b925061068785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cab90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061071c85600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc590919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115610897578591508173ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018060200182810382528381815181526020019150805190602001908083836000831461083c575b80518252602083111561083c57602082019150602081019050602083039250610818565b505050905090810190601f1680156108685780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561088557fe5b6102c65a03f1151561089357fe5b5050505b806040518082805190602001908083835b602083106108cb57805182526020820191506020810190506020830392506108a8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600193505b50505092915050565b600060006000853b91506109c785600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cab90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a5c85600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cc590919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000821115610bd7578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610b7c575b805182526020831115610b7c57602082019150602081019050602083039250610b58565b505050905090810190601f168015610ba85780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610bc557fe5b6102c65a03f11515610bd357fe5b5050505b836040518082805190602001908083835b60208310610c0b5780518252602082019150602081019050602083039250610be8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600192505b50509392505050565b6000610cb983831115610ce5565b81830390505b92915050565b600060008284019050610cda84821015610ce5565b8091505b5092915050565b801515610cf25760006000fd5b5b50565b6020604051908101604052806000815250905600a165627a7a72305820f898796ba64854cac96152806155c1ca5d0557dd937589cc95287a98fcd567a80029",
    "devdoc": {
      "methods": {
        "balanceOf(address)": {
          "params": {
            "_owner": "Address of token owner."
          },
          "return": "Returns balance of owner."
        },
        "transfer(address,uint256)": {
          "details": "Standard function transfer similar to ERC20 transfer with no _data, added due to backwards compatibility reasons.",
          "params": {
            "to": "Address of token receiver.",
            "value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transfer(address,uint256,bytes)": {
          "details": "Function that is called when a user or another contract wants to transfer funds.",
          "params": {
            "data": "Data to be sent to tokenFallback",
            "to": "Address of token receiver.",
            "value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        }
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.4.11+commit.68ef5810"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              },
              {
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_initialAmount",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              }
            ],
            "payable": false,
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceOf(address)": {
              "params": {
                "_owner": "Address of token owner."
              },
              "return": "Returns balance of owner."
            },
            "transfer(address,uint256)": {
              "details": "Standard function transfer similar to ERC20 transfer with no _data, added due to backwards compatibility reasons.",
              "params": {
                "to": "Address of token receiver.",
                "value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transfer(address,uint256,bytes)": {
              "details": "Function that is called when a user or another contract wants to transfer funds.",
              "params": {
                "data": "Data to be sent to tokenFallback",
                "to": "Address of token receiver.",
                "value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            }
          }
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts223/RDNToken/RDNToken.sol": "RDNToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts223/RDNToken/ERC223ReceivingContract.sol": {
          "keccak256": "0x6956470bf8203459c7866f3f5dc5bc401ae3d08205705eb4eba20e72aa4265cc",
          "urls": [
            "bzzr://5c2e057d17084712fa075825345972b8d455186fe9726aeeed7f97606b4300d0"
          ]
        },
        "contracts223/RDNToken/RDNToken.sol": {
          "keccak256": "0xe71c9b38c2442e9499332b47a54476b1ba70d5062ed0fb3eb57a06c39d4a4e4e",
          "urls": [
            "bzzr://809dd92733e832627bb3779521655f7b607f737b7af6e8dd3a6f9a3133c58b6a"
          ]
        },
        "contracts223/RDNToken/SafeMath.sol": {
          "keccak256": "0xc6529d7cab3f5d3ccb57e4a04459f84943b3dea32ec33c96b0ccef5b2b7fb4ae",
          "urls": [
            "bzzr://554b9cf1fa63378a74efb3c0acc92a1aab164262118306e1b7dc60e7c7e26496"
          ]
        },
        "contracts223/RDNToken/StandardToken.sol": {
          "keccak256": "0x6f02ec0f17b828c4d4c1eeb320f22afc9bd6778d08677ca9588feec33e635bc0",
          "urls": [
            "bzzr://d7ae42c4b423ee18192d729db99a56b009311542622c90251b429800f4677bc7"
          ]
        },
        "contracts223/RDNToken/Token.sol": {
          "keccak256": "0xfbde744369794497835f11d3f25a09216c7b7adb33d25184a54a2652bdba0a3d",
          "urls": [
            "bzzr://3d6b64a97a861760ef67f8508faf6a989df97c6172f6d303ff97ed531e0b7803"
          ]
        },
        "contracts223/RaidenMicroTransferChannels.sol": {
          "keccak256": "0x085a85a8446b51ae374ef3124aa8bb4eed4bacb2b5612705cc22eb77950f9668",
          "urls": [
            "bzzr://f7e16327e60039f3aeb1bbb126b72ecd6cd3c55227ff5972aa5aeb50662a28df"
          ]
        },
        "contracts223/lib/ECVerify.sol": {
          "keccak256": "0xef523df442062c4439e9e9642f61af55dbd02b08f8b9b767c86f94c35db6320c",
          "urls": [
            "bzzr://c4a08d4bf87d9e2b64847654705455f4520658fd7b4768c597eee1e3ff2e257a"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "RaidenMicroTransferChannels": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "challenge_period",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_sender",
            "type": "address"
          },
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "getChannelInfo",
        "outputs": [
          {
            "name": "",
            "type": "bytes32"
          },
          {
            "name": "",
            "type": "uint192"
          },
          {
            "name": "",
            "type": "uint32"
          },
          {
            "name": "",
            "type": "uint192"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "closingAgreementMessageHash",
        "outputs": [
          {
            "name": "data",
            "type": "bytes32"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          },
          {
            "name": "_closing_sig",
            "type": "bytes"
          }
        ],
        "name": "close",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "settle",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          }
        ],
        "name": "balanceMessageHash",
        "outputs": [
          {
            "name": "data",
            "type": "bytes32"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "verifyBalanceProof",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_sender",
            "type": "address"
          },
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "getKey",
        "outputs": [
          {
            "name": "data",
            "type": "bytes32"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "token_address",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          },
          {
            "name": "_closing_sig",
            "type": "bytes"
          }
        ],
        "name": "verifyClosingSignature",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "tokenFallback",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "close",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_sender",
            "type": "address"
          },
          {
            "name": "_receiver",
            "type": "address"
          },
          {
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "createChannel",
        "outputs": [],
        "payable": false,
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_token",
            "type": "address"
          },
          {
            "name": "_challenge_period",
            "type": "uint8"
          }
        ],
        "payable": false,
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "ChannelCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "indexed": false,
            "name": "_added_deposit",
            "type": "uint192"
          },
          {
            "indexed": false,
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "ChannelToppedUp",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "indexed": false,
            "name": "_balance",
            "type": "uint192"
          }
        ],
        "name": "ChannelCloseRequested",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "ChannelSettled",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "TokenFallback",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000c57fe5b604051604080611c89833981016040528080519060200190919080519060200190919050505b60008273ffffffffffffffffffffffffffffffffffffffff16141515156100595760006000fd5b60008160ff1611151561006c5760006000fd5b81600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a81548160ff021916908360ff1602179055505b50505b611b6d8061011c6000396000f300606060405236156100c3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a00840c146100c55780630eba6b06146100f157806337e52ea1146101fa5780634f07a663146102705780635a8e9d661461030057806363c84ac0146103455780636c68c837146103c9578063803c8383146104b45780638c8e8fee14610534578063a659b03a14610586578063c0ee0b8a14610663578063e003604e146106e5578063f8a683f614610761575bfe5b34156100cd57fe5b6100d56107d9565b604051808260ff1660ff16815260200191505060405180910390f35b34156100f957fe5b610153600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff169060200190919050506107ec565b6040518085600019166000191681526020018477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b341561020257fe5b610252600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506108cc565b60405180826000191660001916815260200191505060405180910390f35b341561027857fe5b6102fe600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001919091929080359060200190820180359060200191909192905050610937565b005b341561030857fe5b610343600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610a79565b005b341561034d57fe5b6103ab600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610b64565b60405180826000191660001916815260200191505060405180910390f35b34156103d157fe5b610472600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104bc57fe5b610516600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610cab565b60405180826000191660001916815260200191505060405180910390f35b341561053c57fe5b610544610d7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561058e57fe5b610621600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610da4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561066b57fe5b6106e3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610dcd565b005b34156106ed57fe5b61075f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190820180359060200191909192905050610eb2565b005b341561076957fe5b6107d7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610f89565b005b600060149054906101000a900460ff1681565b60006000600060006000610801888888610cab565b90508060026000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1660036000846000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1660036000856000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1694509450945094505b5093509350935093565b6000816040518082805190602001908083835b6020831061090257805182526020820191506020810190506020830392506108df565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090505b919050565b600060006109a986868080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610da4565b91508873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415156109e65760006000fd5b610a2489898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610c7e565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a615760006000fd5b610a6d81838a8a6111fc565b5b505050505050505050565b6000610a86338484610cab565b9050600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1614151515610acd5760006000fd5b60036000826000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1643111515610b105760006000fd5b610b5e33848460036000866000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166111fc565b5b505050565b600083838330604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018463ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018377ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16680100000000000000000281526018018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401945050505050604051809103902090505b9392505050565b600060006000610c8f878787610b64565b9150610c9b828561165a565b90508092505b5050949350505050565b6000838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018263ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004019350505050604051809103902090505b9392505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060006000610db3856108cc565b9150610dbf828561165a565b90508092505b505092915050565b6000610dd882611678565b9050816040518082805190602001908083835b60208310610e0e5780518252602082019150602081019050602083039250610deb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f5c5cc8652d68dcb514a52dc6f5920fa1ef00307b5e139928c09ee5a301c37097866040518082815260200191505060405180910390a4610eab848285610f89565b5b50505050565b6000610ef286868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610c7e565b90508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f3957610f34818787876111fc565b610f80565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f745760006000fd5b610f7f868686611793565b5b5b505050505050565b60006000439150610f9b858584610cab565b9050600060026000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161415156110095760006000fd5b600060026000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1614151561104d5760006000fd5b600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161415156110915760006000fd5b6040604051908101604052808477ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681525060026000836000191660001916815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f986876e67d288f7b8bc5229976a1d5710be919feb66d2e1aec1bf3eadebba20785604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35b5050505050565b600060006000600061120f888888610cab565b9350600260008560001916600019168152602001908152602001600020925060008360000160189054906101000a900463ffffffff1663ffffffff16141515156112595760006000fd5b61128b858460000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16611950565b9150600082111561138557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561136057fe5b6102c65a03f1151561136e57fe5b5050506040518051905015156113845760006000fd5b5b6113ba858460000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff160360006119d9565b905060008111156114b457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561148f57fe5b6102c65a03f1151561149d57fe5b5050506040518051905015156114b35760006000fd5b5b8477ffffffffffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161015151561151c57fe5b60026000856000191660001916815260200190815260200160002060006000820160006101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690556000820160186101000a81549063ffffffff0219169055505060036000856000191660001916815260200190815260200160002060006000820160006101000a81549063ffffffff02191690556000820160046101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff021916905550508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f507f4ff9082a6593823633619abc4f54a81a0c32bf78db63561bbc22830adb5e88604051808263ffffffff1663ffffffff16815260200191505060405180910390a35b5050505050505050565b600060006116688484611a62565b80935081925050505b5092915050565b600060006000600060009250600091505b84518210156117875784828151811015156116a057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004905060308110158015611722575060398111155b156117335760308103601084020192505b604181101580156117455750605a8111155b156117565760378103601084020192505b606181101580156117685750607a8111155b156117795760578103601084020192505b5b8180600101925050611689565b8293505b505050919050565b60006117a0338585610cab565b9050600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161415156117e65760006000fd5b600060149054906101000a900460ff1660ff16430160036000836000191660001916815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055508160036000836000191660001916815260200190815260200160002060000160046101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f960e55a871be40c817ffd64e2117c513e42f047ccfdcbc5454e68dfc65e9a9b08585604051808363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a35b50505050565b60008177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff1610156119b0578277ffffffffffffffffffffffffffffffffffffffffffffffff1690506119d3565b8177ffffffffffffffffffffffffffffffffffffffffffffffff1690506119d3565b5b92915050565b60008177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff161115611a39578277ffffffffffffffffffffffffffffffffffffffffffffffff169050611a5c565b8177ffffffffffffffffffffffffffffffffffffffffffffffff169050611a5c565b5b92915050565b6000600060006000600060418651141515611a87576000600080905094509450611af0565b6020860151925060408601519150606086015160001a9050601b8160ff161015611ab257601b810190505b601b8160ff1614158015611aca5750601c8160ff1614155b15611adf576000600080905094509450611af0565b611aeb87828585611afa565b945094505b5050509250929050565b600060006000600060405188815287602082015286604082015285606082015260208160808360006001610bb8f1925080519150508181935093505b5050945094925050505600a165627a7a72305820b5b0d644c05ba849959291a163c37f43dc1b94c05d04eec5cd468cb980388d690029",
    "bytecode_runtime": "0x606060405236156100c3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a00840c146100c55780630eba6b06146100f157806337e52ea1146101fa5780634f07a663146102705780635a8e9d661461030057806363c84ac0146103455780636c68c837146103c9578063803c8383146104b45780638c8e8fee14610534578063a659b03a14610586578063c0ee0b8a14610663578063e003604e146106e5578063f8a683f614610761575bfe5b34156100cd57fe5b6100d56107d9565b604051808260ff1660ff16815260200191505060405180910390f35b34156100f957fe5b610153600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff169060200190919050506107ec565b6040518085600019166000191681526020018477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b341561020257fe5b610252600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506108cc565b60405180826000191660001916815260200191505060405180910390f35b341561027857fe5b6102fe600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001919091929080359060200190820180359060200191909192905050610937565b005b341561030857fe5b610343600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610a79565b005b341561034d57fe5b6103ab600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610b64565b60405180826000191660001916815260200191505060405180910390f35b34156103d157fe5b610472600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104bc57fe5b610516600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610cab565b60405180826000191660001916815260200191505060405180910390f35b341561053c57fe5b610544610d7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561058e57fe5b610621600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610da4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561066b57fe5b6106e3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610dcd565b005b34156106ed57fe5b61075f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190820180359060200191909192905050610eb2565b005b341561076957fe5b6107d7600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610f89565b005b600060149054906101000a900460ff1681565b60006000600060006000610801888888610cab565b90508060026000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1660036000846000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1660036000856000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1694509450945094505b5093509350935093565b6000816040518082805190602001908083835b6020831061090257805182526020820191506020810190506020830392506108df565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090505b919050565b600060006109a986868080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610da4565b91508873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415156109e65760006000fd5b610a2489898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610c7e565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a615760006000fd5b610a6d81838a8a6111fc565b5b505050505050505050565b6000610a86338484610cab565b9050600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1614151515610acd5760006000fd5b60036000826000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1643111515610b105760006000fd5b610b5e33848460036000866000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff166111fc565b5b505050565b600083838330604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018463ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018377ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16680100000000000000000281526018018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401945050505050604051809103902090505b9392505050565b600060006000610c8f878787610b64565b9150610c9b828561165a565b90508092505b5050949350505050565b6000838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018263ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004019350505050604051809103902090505b9392505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060006000610db3856108cc565b9150610dbf828561165a565b90508092505b505092915050565b6000610dd882611678565b9050816040518082805190602001908083835b60208310610e0e5780518252602082019150602081019050602083039250610deb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208173ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f5c5cc8652d68dcb514a52dc6f5920fa1ef00307b5e139928c09ee5a301c37097866040518082815260200191505060405180910390a4610eab848285610f89565b5b50505050565b6000610ef286868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610c7e565b90508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f3957610f34818787876111fc565b610f80565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f745760006000fd5b610f7f868686611793565b5b5b505050505050565b60006000439150610f9b858584610cab565b9050600060026000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161415156110095760006000fd5b600060026000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1614151561104d5760006000fd5b600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161415156110915760006000fd5b6040604051908101604052808477ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681525060026000836000191660001916815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f986876e67d288f7b8bc5229976a1d5710be919feb66d2e1aec1bf3eadebba20785604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35b5050505050565b600060006000600061120f888888610cab565b9350600260008560001916600019168152602001908152602001600020925060008360000160189054906101000a900463ffffffff1663ffffffff16141515156112595760006000fd5b61128b858460000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16611950565b9150600082111561138557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561136057fe5b6102c65a03f1151561136e57fe5b5050506040518051905015156113845760006000fd5b5b6113ba858460000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff160360006119d9565b905060008111156114b457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561148f57fe5b6102c65a03f1151561149d57fe5b5050506040518051905015156114b35760006000fd5b5b8477ffffffffffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161015151561151c57fe5b60026000856000191660001916815260200190815260200160002060006000820160006101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690556000820160186101000a81549063ffffffff0219169055505060036000856000191660001916815260200190815260200160002060006000820160006101000a81549063ffffffff02191690556000820160046101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff021916905550508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f507f4ff9082a6593823633619abc4f54a81a0c32bf78db63561bbc22830adb5e88604051808263ffffffff1663ffffffff16815260200191505060405180910390a35b5050505050505050565b600060006116688484611a62565b80935081925050505b5092915050565b600060006000600060009250600091505b84518210156117875784828151811015156116a057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004905060308110158015611722575060398111155b156117335760308103601084020192505b604181101580156117455750605a8111155b156117565760378103601084020192505b606181101580156117685750607a8111155b156117795760578103601084020192505b5b8180600101925050611689565b8293505b505050919050565b60006117a0338585610cab565b9050600060036000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff161415156117e65760006000fd5b600060149054906101000a900460ff1660ff16430160036000836000191660001916815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055508160036000836000191660001916815260200190815260200160002060000160046101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f960e55a871be40c817ffd64e2117c513e42f047ccfdcbc5454e68dfc65e9a9b08585604051808363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a35b50505050565b60008177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff1610156119b0578277ffffffffffffffffffffffffffffffffffffffffffffffff1690506119d3565b8177ffffffffffffffffffffffffffffffffffffffffffffffff1690506119d3565b5b92915050565b60008177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff161115611a39578277ffffffffffffffffffffffffffffffffffffffffffffffff169050611a5c565b8177ffffffffffffffffffffffffffffffffffffffffffffffff169050611a5c565b5b92915050565b6000600060006000600060418651141515611a87576000600080905094509450611af0565b6020860151925060408601519150606086015160001a9050601b8160ff161015611ab257601b810190505b601b8160ff1614158015611aca5750601c8160ff1614155b15611adf576000600080905094509450611af0565b611aeb87828585611afa565b945094505b5050509250929050565b600060006000600060405188815287602082015286604082015285606082015260208160808360006001610bb8f1925080519150508181935093505b5050945094925050505600a165627a7a72305820b5b0d644c05ba849959291a163c37f43dc1b94c05d04eec5cd468cb980388d690029",
    "devdoc": {
      "methods": {
        "balanceMessageHash(address,uint32,uint192)": {
          "details": "Returns a hash of the balance message needed to be signed by the sender.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens."
          },
          "return": "Hash of the balance message."
        },
        "close(address,uint32,uint192,bytes)": {
          "details": "Function called when any of the parties wants to close the channel and settle; receiver needs a balance proof to immediately settle, sender triggers a challenge period.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens."
          }
        },
        "close(address,uint32,uint192,bytes,bytes)": {
          "details": "Function called by the sender, when he has a closing signature from the receiver; channel is closed immediately.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_closing_sig": "The hash of the signed balance message, signed by the receiver.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens."
          }
        },
        "closingAgreementMessageHash(bytes)": {
          "details": "Returns a hash of the balance message that was signed by the sender, so it can be subsequently signed by the receiver.",
          "params": {
            "_balance_msg_sig": "The balance message signed by the sender."
          },
          "return": "Hash of the balance message signed by the sender."
        },
        "createChannel(address,address,uint192)": {
          "details": "Creates a new channel between a sender and a receiver and transfers the sender's token deposit to this contract.",
          "params": {
            "_deposit": "The amount of tokens that the sender escrows.",
            "_receiver": "The address that receives tokens.",
            "_sender": "The address that receives tokens."
          }
        },
        "getChannelInfo(address,address,uint32)": {
          "details": "Function for getting information about a channel.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens.",
            "_sender": "The address that sends tokens."
          },
          "return": "Channel information (unique_identifier, deposit, settle_block_number, closing_balance)."
        },
        "getKey(address,address,uint32)": {
          "details": "Returns the unique channel identifier used in the contract.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens.",
            "_sender": "The address that sends tokens."
          },
          "return": "Unique channel identifier."
        },
        "settle(address,uint32)": {
          "details": "Function called by the sender after the challenge period has ended, in case the receiver has not closed the channel.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens."
          }
        },
        "verifyBalanceProof(address,uint32,uint192,bytes)": {
          "details": "Returns the sender address extracted from the balance proof.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver": "The address that receives tokens."
          },
          "return": "Address of the token sender."
        },
        "verifyClosingSignature(bytes,bytes)": {
          "details": "Returns the receiver address extracted from the closing signature and the signed balance message.",
          "params": {
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_closing_sig": "The hash of the signed balance message, signed by the receiver."
          },
          "return": "Address of the tokens receiver."
        }
      },
      "title": "Raiden MicroTransfer Channels Contract."
    },
    "metadata": {
      "compiler": {
        "version": "0.4.11+commit.68ef5810"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "challenge_period",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_sender",
                "type": "address"
              },
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "getChannelInfo",
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              },
              {
                "name": "",
                "type": "uint192"
              },
              {
                "name": "",
                "type": "uint32"
              },
              {
                "name": "",
                "type": "uint192"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "closingAgreementMessageHash",
            "outputs": [
              {
                "name": "data",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              },
              {
                "name": "_closing_sig",
                "type": "bytes"
              }
            ],
            "name": "close",
            "outputs": [],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "settle",
            "outputs": [],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              }
            ],
            "name": "balanceMessageHash",
            "outputs": [
              {
                "name": "data",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "verifyBalanceProof",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_sender",
                "type": "address"
              },
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "getKey",
            "outputs": [
              {
                "name": "data",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "token_address",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              },
              {
                "name": "_closing_sig",
                "type": "bytes"
              }
            ],
            "name": "verifyClosingSignature",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "tokenFallback",
            "outputs": [],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "close",
            "outputs": [],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_sender",
                "type": "address"
              },
              {
                "name": "_receiver",
                "type": "address"
              },
              {
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "createChannel",
            "outputs": [],
            "payable": false,
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_challenge_period",
                "type": "uint8"
              }
            ],
            "payable": false,
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "ChannelCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "indexed": false,
                "name": "_added_deposit",
                "type": "uint192"
              },
              {
                "indexed": false,
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "ChannelToppedUp",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "indexed": false,
                "name": "_balance",
                "type": "uint192"
              }
            ],
            "name": "ChannelCloseRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "ChannelSettled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "TokenFallback",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceMessageHash(address,uint32,uint192)": {
              "details": "Returns a hash of the balance message needed to be signed by the sender.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens."
              },
              "return": "Hash of the balance message."
            },
            "close(address,uint32,uint192,bytes)": {
              "details": "Function called when any of the parties wants to close the channel and settle; receiver needs a balance proof to immediately settle, sender triggers a challenge period.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens."
              }
            },
            "close(address,uint32,uint192,bytes,bytes)": {
              "details": "Function called by the sender, when he has a closing signature from the receiver; channel is closed immediately.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_closing_sig": "The hash of the signed balance message, signed by the receiver.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens."
              }
            },
            "closingAgreementMessageHash(bytes)": {
              "details": "Returns a hash of the balance message that was signed by the sender, so it can be subsequently signed by the receiver.",
              "params": {
                "_balance_msg_sig": "The balance message signed by the sender."
              },
              "return": "Hash of the balance message signed by the sender."
            },
            "createChannel(address,address,uint192)": {
              "details": "Creates a new channel between a sender and a receiver and transfers the sender's token deposit to this contract.",
              "params": {
                "_deposit": "The amount of tokens that the sender escrows.",
                "_receiver": "The address that receives tokens.",
                "_sender": "The address that receives tokens."
              }
            },
            "getChannelInfo(address,address,uint32)": {
              "details": "Function for getting information about a channel.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens.",
                "_sender": "The address that sends tokens."
              },
              "return": "Channel information (unique_identifier, deposit, settle_block_number, closing_balance)."
            },
            "getKey(address,address,uint32)": {
              "details": "Returns the unique channel identifier used in the contract.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens.",
                "_sender": "The address that sends tokens."
              },
              "return": "Unique channel identifier."
            },
            "settle(address,uint32)": {
              "details": "Function called by the sender after the challenge period has ended, in case the receiver has not closed the channel.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens."
              }
            },
            "verifyBalanceProof(address,uint32,uint192,bytes)": {
              "details": "Returns the sender address extracted from the balance proof.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver": "The address that receives tokens."
              },
              "return": "Address of the token sender."
            },
            "verifyClosingSignature(bytes,bytes)": {
              "details": "Returns the receiver address extracted from the closing signature and the signed balance message.",
              "params": {
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_closing_sig": "The hash of the signed balance message, signed by the receiver."
              },
              "return": "Address of the tokens receiver."
            }
          },
          "title": "Raiden MicroTransfer Channels Contract."
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts223/RaidenMicroTransferChannels.sol": "RaidenMicroTransferChannels"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts223/RDNToken/ERC223ReceivingContract.sol": {
          "keccak256": "0x6956470bf8203459c7866f3f5dc5bc401ae3d08205705eb4eba20e72aa4265cc",
          "urls": [
            "bzzr://5c2e057d17084712fa075825345972b8d455186fe9726aeeed7f97606b4300d0"
          ]
        },
        "contracts223/RDNToken/RDNToken.sol": {
          "keccak256": "0xe71c9b38c2442e9499332b47a54476b1ba70d5062ed0fb3eb57a06c39d4a4e4e",
          "urls": [
            "bzzr://809dd92733e832627bb3779521655f7b607f737b7af6e8dd3a6f9a3133c58b6a"
          ]
        },
        "contracts223/RDNToken/SafeMath.sol": {
          "keccak256": "0xc6529d7cab3f5d3ccb57e4a04459f84943b3dea32ec33c96b0ccef5b2b7fb4ae",
          "urls": [
            "bzzr://554b9cf1fa63378a74efb3c0acc92a1aab164262118306e1b7dc60e7c7e26496"
          ]
        },
        "contracts223/RDNToken/StandardToken.sol": {
          "keccak256": "0x6f02ec0f17b828c4d4c1eeb320f22afc9bd6778d08677ca9588feec33e635bc0",
          "urls": [
            "bzzr://d7ae42c4b423ee18192d729db99a56b009311542622c90251b429800f4677bc7"
          ]
        },
        "contracts223/RDNToken/Token.sol": {
          "keccak256": "0xfbde744369794497835f11d3f25a09216c7b7adb33d25184a54a2652bdba0a3d",
          "urls": [
            "bzzr://3d6b64a97a861760ef67f8508faf6a989df97c6172f6d303ff97ed531e0b7803"
          ]
        },
        "contracts223/RaidenMicroTransferChannels.sol": {
          "keccak256": "0x085a85a8446b51ae374ef3124aa8bb4eed4bacb2b5612705cc22eb77950f9668",
          "urls": [
            "bzzr://f7e16327e60039f3aeb1bbb126b72ecd6cd3c55227ff5972aa5aeb50662a28df"
          ]
        },
        "contracts223/lib/ECVerify.sol": {
          "keccak256": "0xef523df442062c4439e9e9642f61af55dbd02b08f8b9b767c86f94c35db6320c",
          "urls": [
            "bzzr://c4a08d4bf87d9e2b64847654705455f4520658fd7b4768c597eee1e3ff2e257a"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "SafeMath": {
    "abi": [],
    "bytecode": "0x60606040523415600b57fe5b5b60338060196000396000f30060606040525bfe00a165627a7a7230582055c4daec4a968a9ac4996af4fc6daf848405bdc9f42b70b5c21faf0bf5c01a5e0029",
    "bytecode_runtime": "0x60606040525bfe00a165627a7a7230582055c4daec4a968a9ac4996af4fc6daf848405bdc9f42b70b5c21faf0bf5c01a5e0029",
    "devdoc": {
      "methods": {}
    },
    "metadata": {
      "compiler": {
        "version": "0.4.11+commit.68ef5810"
      },
      "language": "Solidity",
      "output": {
        "abi": [],
        "devdoc": {
          "methods": {}
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts223/RDNToken/SafeMath.sol": "SafeMath"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts223/RDNToken/ERC223ReceivingContract.sol": {
          "keccak256": "0x6956470bf8203459c7866f3f5dc5bc401ae3d08205705eb4eba20e72aa4265cc",
          "urls": [
            "bzzr://5c2e057d17084712fa075825345972b8d455186fe9726aeeed7f97606b4300d0"
          ]
        },
        "contracts223/RDNToken/RDNToken.sol": {
          "keccak256": "0xe71c9b38c2442e9499332b47a54476b1ba70d5062ed0fb3eb57a06c39d4a4e4e",
          "urls": [
            "bzzr://809dd92733e832627bb3779521655f7b607f737b7af6e8dd3a6f9a3133c58b6a"
          ]
        },
        "contracts223/RDNToken/SafeMath.sol": {
          "keccak256": "0xc6529d7cab3f5d3ccb57e4a04459f84943b3dea32ec33c96b0ccef5b2b7fb4ae",
          "urls": [
            "bzzr://554b9cf1fa63378a74efb3c0acc92a1aab164262118306e1b7dc60e7c7e26496"
          ]
        },
        "contracts223/RDNToken/StandardToken.sol": {
          "keccak256": "0x6f02ec0f17b828c4d4c1eeb320f22afc9bd6778d08677ca9588feec33e635bc0",
          "urls": [
            "bzzr://d7ae42c4b423ee18192d729db99a56b009311542622c90251b429800f4677bc7"
          ]
        },
        "contracts223/RDNToken/Token.sol": {
          "keccak256": "0xfbde744369794497835f11d3f25a09216c7b7adb33d25184a54a2652bdba0a3d",
          "urls": [
            "bzzr://3d6b64a97a861760ef67f8508faf6a989df97c6172f6d303ff97ed531e0b7803"
          ]
        },
        "contracts223/RaidenMicroTransferChannels.sol": {
          "keccak256": "0x085a85a8446b51ae374ef3124aa8bb4eed4bacb2b5612705cc22eb77950f9668",
          "urls": [
            "bzzr://f7e16327e60039f3aeb1bbb126b72ecd6cd3c55227ff5972aa5aeb50662a28df"
          ]
        },
        "contracts223/lib/ECVerify.sol": {
          "keccak256": "0xef523df442062c4439e9e9642f61af55dbd02b08f8b9b767c86f94c35db6320c",
          "urls": [
            "bzzr://c4a08d4bf87d9e2b64847654705455f4520658fd7b4768c597eee1e3ff2e257a"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "StandardToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "to",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000c57fe5b5b6109208061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610082578063a9059cbb146100cc578063be45fd6214610123575bfe5b341561006457fe5b61006c6101bd565b6040518082815260200191505060405180910390f35b341561008a57fe5b6100b6600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c3565b6040518082815260200191505060405180910390f35b34156100d457fe5b610109600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061020d565b604051808215151515815260200191505060405180910390f35b341561012b57fe5b6101a3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610555565b604051808215151515815260200191505060405180910390f35b60005481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60006000600061021b6108e0565b853b925061027185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061030685600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108af90919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115610481578591508173ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610426575b80518252602083111561042657602082019150602081019050602083039250610402565b505050905090810190601f1680156104525780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561046f57fe5b6102c65a03f1151561047d57fe5b5050505b806040518082805190602001908083835b602083106104b55780518252602082019150602081019050602083039250610492565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600193505b50505092915050565b600060006000853b91506105b185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061064685600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108af90919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008211156107c1578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610766575b80518252602083111561076657602082019150602081019050602083039250610742565b505050905090810190601f1680156107925780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15156107af57fe5b6102c65a03f115156107bd57fe5b5050505b836040518082805190602001908083835b602083106107f557805182526020820191506020810190506020830392506107d2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600192505b50509392505050565b60006108a3838311156108cf565b81830390505b92915050565b6000600082840190506108c4848210156108cf565b8091505b5092915050565b8015156108dc5760006000fd5b5b50565b6020604051908101604052806000815250905600a165627a7a723058209a5e90550acb7d0d31cec9df3d9eb07ef30ed2c49c8f8a1e8a1ab15df63ae9b60029",
    "bytecode_runtime": "0x60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806318160ddd1461005c57806370a0823114610082578063a9059cbb146100cc578063be45fd6214610123575bfe5b341561006457fe5b61006c6101bd565b6040518082815260200191505060405180910390f35b341561008a57fe5b6100b6600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c3565b6040518082815260200191505060405180910390f35b34156100d457fe5b610109600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061020d565b604051808215151515815260200191505060405180910390f35b341561012b57fe5b6101a3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610555565b604051808215151515815260200191505060405180910390f35b60005481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60006000600061021b6108e0565b853b925061027185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061030685600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108af90919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115610481578591508173ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610426575b80518252602083111561042657602082019150602081019050602083039250610402565b505050905090810190601f1680156104525780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561046f57fe5b6102c65a03f1151561047d57fe5b5050505b806040518082805190602001908083835b602083106104b55780518252602082019150602081019050602083039250610492565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600193505b50505092915050565b600060006000853b91506105b185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089590919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061064685600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108af90919063ffffffff16565b600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008211156107c1578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360008314610766575b80518252602083111561076657602082019150602081019050602083039250610742565b505050905090810190601f1680156107925780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15156107af57fe5b6102c65a03f115156107bd57fe5b5050505b836040518082805190602001908083835b602083106107f557805182526020820191506020810190506020830392506107d2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16886040518082815260200191505060405180910390a4600192505b50509392505050565b60006108a3838311156108cf565b81830390505b92915050565b6000600082840190506108c4848210156108cf565b8091505b5092915050565b8015156108dc5760006000fd5b5b50565b6020604051908101604052806000815250905600a165627a7a723058209a5e90550acb7d0d31cec9df3d9eb07ef30ed2c49c8f8a1e8a1ab15df63ae9b60029",
    "devdoc": {
      "methods": {
        "balanceOf(address)": {
          "params": {
            "_owner": "Address of token owner."
          },
          "return": "Returns balance of owner."
        },
        "transfer(address,uint256)": {
          "details": "Standard function transfer similar to ERC20 transfer with no _data, added due to backwards compatibility reasons.",
          "params": {
            "to": "Address of token receiver.",
            "value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transfer(address,uint256,bytes)": {
          "details": "Function that is called when a user or another contract wants to transfer funds.",
          "params": {
            "data": "Data to be sent to tokenFallback",
            "to": "Address of token receiver.",
            "value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        }
      },
      "title": "Standard token contract - Standard token implementation."
    },
    "metadata": {
      "compiler": {
        "version": "0.4.11+commit.68ef5810"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "to",
                "type": "address"
              },
              {
                "name": "value",
                "type": "uint256"
              },
              {
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              },
              {
                "indexed": true,
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "Transfer",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "balanceOf(address)": {
              "params": {
                "_owner": "Address of token owner."
              },
              "return": "Returns balance of owner."
            },
            "transfer(address,uint256)": {
              "details": "Standard function transfer similar to ERC20 transfer with no _data, added due to backwards compatibility reasons.",
              "params": {
                "to": "Address of token receiver.",
                "value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transfer(address,uint256,bytes)": {
              "details": "Function that is called when a user or another contract wants to transfer funds.",
              "params": {
                "data": "Data to be sent to tokenFallback",
                "to": "Address of token receiver.",
                "value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            }
          },
          "title": "Standard token contract - Standard token implementation."
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts223/RDNToken/StandardToken.sol": "StandardToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts223/RDNToken/ERC223ReceivingContract.sol": {
          "keccak256": "0x6956470bf8203459c7866f3f5dc5bc401ae3d08205705eb4eba20e72aa4265cc",
          "urls": [
            "bzzr://5c2e057d17084712fa075825345972b8d455186fe9726aeeed7f97606b4300d0"
          ]
        },
        "contracts223/RDNToken/RDNToken.sol": {
          "keccak256": "0xe71c9b38c2442e9499332b47a54476b1ba70d5062ed0fb3eb57a06c39d4a4e4e",
          "urls": [
            "bzzr://809dd92733e832627bb3779521655f7b607f737b7af6e8dd3a6f9a3133c58b6a"
          ]
        },
        "contracts223/RDNToken/SafeMath.sol": {
          "keccak256": "0xc6529d7cab3f5d3ccb57e4a04459f84943b3dea32ec33c96b0ccef5b2b7fb4ae",
          "urls": [
            "bzzr://554b9cf1fa63378a74efb3c0acc92a1aab164262118306e1b7dc60e7c7e26496"
          ]
        },
        "contracts223/RDNToken/StandardToken.sol": {
          "keccak256": "0x6f02ec0f17b828c4d4c1eeb320f22afc9bd6778d08677ca9588feec33e635bc0",
          "urls": [
            "bzzr://d7ae42c4b423ee18192d729db99a56b009311542622c90251b429800f4677bc7"
          ]
        },
        "contracts223/RDNToken/Token.sol": {
          "keccak256": "0xfbde744369794497835f11d3f25a09216c7b7adb33d25184a54a2652bdba0a3d",
          "urls": [
            "bzzr://3d6b64a97a861760ef67f8508faf6a989df97c6172f6d303ff97ed531e0b7803"
          ]
        },
        "contracts223/RaidenMicroTransferChannels.sol": {
          "keccak256": "0x085a85a8446b51ae374ef3124aa8bb4eed4bacb2b5612705cc22eb77950f9668",
          "urls": [
            "bzzr://f7e16327e60039f3aeb1bbb126b72ecd6cd3c55227ff5972aa5aeb50662a28df"
          ]
        },
        "contracts223/lib/ECVerify.sol": {
          "keccak256": "0xef523df442062c4439e9e9642f61af55dbd02b08f8b9b767c86f94c35db6320c",
          "urls": [
            "bzzr://c4a08d4bf87d9e2b64847654705455f4520658fd7b4768c597eee1e3ff2e257a"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "Token": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          },
          {
            "indexed": true,
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "Transfer",
        "type": "event"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {
        "balanceOf(address)": {
          "params": {
            "_owner": "The address from which the balance will be retrieved"
          },
          "return": "The balance"
        },
        "transfer(address,uint256)": {
          "params": {
            "_to": "The address of the recipient",
            "_value": "The amount of token to be transferred"
          },
          "return": "Returns success of function call."
        },
        "transfer(address,uint256,bytes)": {
          "params": {
            "_data": "Data to be sent to tokenFallback",
            "_to": "The address of the recipient",
            "_value": "The amount of token to be transferred"
          },
          "return": "Returns success of function call."
        }
      }
    },
    "metadata": null,
    "userdoc": {
      "methods": {
        "transfer(address,uint256)": {
          "notice": "send `_value` token to `_to` from `msg.sender`"
        },
        "transfer(address,uint256,bytes)": {
          "notice": "send `_value` token to `_to` from `msg.sender`"
        }
      }
    }
  }
}
