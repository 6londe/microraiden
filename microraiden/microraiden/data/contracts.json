{
  "CustomToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "mint",
        "outputs": [],
        "payable": true,
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "multiplier",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "transferFunds",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "version",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner_address",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "initial_supply",
            "type": "uint256"
          },
          {
            "name": "token_name",
            "type": "string"
          },
          {
            "name": "token_symbol",
            "type": "string"
          },
          {
            "name": "decimal_units",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_num",
            "type": "uint256"
          }
        ],
        "name": "Minted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      }
    ],
    "bytecode": "0x60606040526040805190810160405280600481526020017f48302e31000000000000000000000000000000000000000000000000000000008152506006908051906020019062000051929190620001ac565b5034156200005e57600080fd5b6040516200169738038062001697833981016040528080519060200190919080518201919060200180518201919060200180519060200190919050508260079080519060200190620000b2929190620001ac565b5080600960006101000a81548160ff021916908360ff1602179055508060ff16600a0a600a819055508160089080519060200190620000f3929190620001ac565b5033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360046000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600081905550505050506200025b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001ef57805160ff191683800117855562000220565b8280016001018555821562000220579182015b828111156200021f57825182559160200191906001019062000202565b5b5090506200022f919062000233565b5090565b6200025891905b80821115620002545760008160009055506001016200023a565b5090565b90565b61142c806200026b6000396000f300606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100de578063095ea7b31461016c5780631249c58b146101c657806318160ddd146101d05780631b3ed722146101f957806323b872dd14610222578063313ce5671461029b5780633c68eb81146102ca57806354fd4d50146102df57806370a082311461036d57806380edef8e146103ba57806395d89b411461040f578063a9059cbb1461049d578063be45fd62146104f7578063dd62ed3e14610594575b600080fd5b34156100e957600080fd5b6100f1610600565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610131578082015181840152602081019050610116565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017757600080fd5b6101ac600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061069e565b604051808215151515815260200191505060405180910390f35b6101ce61084b565b005b34156101db57600080fd5b6101e3610968565b6040518082815260200191505060405180910390f35b341561020457600080fd5b61020c61096e565b6040518082815260200191505060405180910390f35b341561022d57600080fd5b610281600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610974565b604051808215151515815260200191505060405180910390f35b34156102a657600080fd5b6102ae610cf8565b604051808260ff1660ff16815260200191505060405180910390f35b34156102d557600080fd5b6102dd610d0b565b005b34156102ea57600080fd5b6102f2610e2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610332578082015181840152602081019050610317565b50505050905090810190601f16801561035f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037857600080fd5b6103a4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ec9565b6040518082815260200191505060405180910390f35b34156103c557600080fd5b6103cd610f12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561041a57600080fd5b610422610f38565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104a857600080fd5b6104dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd6565b604051808215151515815260200191505060405180910390f35b341561050257600080fd5b61057a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061121e565b604051808215151515815260200191505060405180910390f35b341561059f57600080fd5b6105ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611379565b6040518082815260200191505060405180910390f35b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff16141515156106c557600080fd5b600082148061075057506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561075b57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600067016345785d8a0000341015151561086457600080fd5b600a54603202905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806000808282540192505081905550803373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe60405160405180910390a380600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561095757fe5b806000541015151561096557fe5b50565b60005481565b600a5481565b6000808473ffffffffffffffffffffffffffffffffffffffff161415151561099b57600080fd5b60008373ffffffffffffffffffffffffffffffffffffffff16141515156109c157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109fc57600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a4a57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad557600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515610b6457600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600960009054906101000a900460ff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6757600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610d8d57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515610e0657600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631141515610e2957fe5b565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b505050505081565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fce5780601f10610fa357610100808354040283529160200191610fce565b820191906000526020600020905b815481529060010190602001808311610fb157829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515610ffd57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561103857600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561108657600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561111557600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600061122d8686610fd6565b151561123857600080fd5b853b9150600082111561136c578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561130a5780820151818401526020810190506112ef565b50505050905090810190601f1680156113375780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561135757600080fd5b6102c65a03f1151561136857600080fd5b5050505b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a7230582087d39fc347e602d0a974eda6acb501e1e307a408263c0a8f1a3026e1ecd1f7f10029",
    "bytecode_runtime": "0x606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100de578063095ea7b31461016c5780631249c58b146101c657806318160ddd146101d05780631b3ed722146101f957806323b872dd14610222578063313ce5671461029b5780633c68eb81146102ca57806354fd4d50146102df57806370a082311461036d57806380edef8e146103ba57806395d89b411461040f578063a9059cbb1461049d578063be45fd62146104f7578063dd62ed3e14610594575b600080fd5b34156100e957600080fd5b6100f1610600565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610131578082015181840152602081019050610116565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017757600080fd5b6101ac600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061069e565b604051808215151515815260200191505060405180910390f35b6101ce61084b565b005b34156101db57600080fd5b6101e3610968565b6040518082815260200191505060405180910390f35b341561020457600080fd5b61020c61096e565b6040518082815260200191505060405180910390f35b341561022d57600080fd5b610281600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610974565b604051808215151515815260200191505060405180910390f35b34156102a657600080fd5b6102ae610cf8565b604051808260ff1660ff16815260200191505060405180910390f35b34156102d557600080fd5b6102dd610d0b565b005b34156102ea57600080fd5b6102f2610e2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610332578082015181840152602081019050610317565b50505050905090810190601f16801561035f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037857600080fd5b6103a4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ec9565b6040518082815260200191505060405180910390f35b34156103c557600080fd5b6103cd610f12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561041a57600080fd5b610422610f38565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104a857600080fd5b6104dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd6565b604051808215151515815260200191505060405180910390f35b341561050257600080fd5b61057a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061121e565b604051808215151515815260200191505060405180910390f35b341561059f57600080fd5b6105ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611379565b6040518082815260200191505060405180910390f35b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106965780601f1061066b57610100808354040283529160200191610696565b820191906000526020600020905b81548152906001019060200180831161067957829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff16141515156106c557600080fd5b600082148061075057506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561075b57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600067016345785d8a0000341015151561086457600080fd5b600a54603202905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806000808282540192505081905550803373ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe60405160405180910390a380600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561095757fe5b806000541015151561096557fe5b50565b60005481565b600a5481565b6000808473ffffffffffffffffffffffffffffffffffffffff161415151561099b57600080fd5b60008373ffffffffffffffffffffffffffffffffffffffff16141515156109c157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109fc57600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a4a57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610ad557600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515610b6457600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600960009054906101000a900460ff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6757600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610d8d57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501515610e0657600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631141515610e2957fe5b565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b505050505081565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fce5780601f10610fa357610100808354040283529160200191610fce565b820191906000526020600020905b815481529060010190602001808311610fb157829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515610ffd57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561103857600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561108657600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011015151561111557600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600061122d8686610fd6565b151561123857600080fd5b853b9150600082111561136c578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561130a5780820151818401526020810190506112ef565b50505050905090810190601f1680156113375780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b151561135757600080fd5b6102c65a03f1151561136857600080fd5b5050505b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a7230582087d39fc347e602d0a974eda6acb501e1e307a408263c0a8f1a3026e1ecd1f7f10029",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "Returns number of allowed tokens that a spender can transfer on behalf of a token owner.",
          "params": {
            "_owner": "Address of token owner.",
            "_spender": "Address of token spender."
          },
          "return": "Returns remaining allowance for spender."
        },
        "approve(address,uint256)": {
          "details": "Sets approved amount of tokens for spender. Returns success.",
          "params": {
            "_spender": "Address of allowed account.",
            "_value": "Number of approved tokens."
          },
          "return": "Returns success of function call."
        },
        "balanceOf(address)": {
          "details": "Returns number of tokens owned by the given address.",
          "params": {
            "_owner": "Address of token owner."
          },
          "return": "Returns balance of owner."
        },
        "transfer(address,uint256)": {
          "details": "Transfers sender's tokens to a given address. Returns success.",
          "params": {
            "_to": "Address of token receiver.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transfer(address,uint256,bytes)": {
          "details": "Function that is called when a user or another contract wants to transfer funds.",
          "params": {
            "_data": "Data to be sent to tokenFallback",
            "_to": "Address of token receiver.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Allows for an approved third party to transfer tokens from one address to another. Returns success.",
          "params": {
            "_from": "Address from where tokens are withdrawn.",
            "_to": "Address to where tokens are sent.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        }
      },
      "title": "CustomToken"
    },
    "metadata": {
      "compiler": {
        "version": "0.4.17+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "mint",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "multiplier",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "transferFunds",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner_address",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "initial_supply",
                "type": "uint256"
              },
              {
                "name": "token_name",
                "type": "string"
              },
              {
                "name": "token_symbol",
                "type": "string"
              },
              {
                "name": "decimal_units",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_num",
                "type": "uint256"
              }
            ],
            "name": "Minted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Returns number of allowed tokens that a spender can transfer on behalf of a token owner.",
              "params": {
                "_owner": "Address of token owner.",
                "_spender": "Address of token spender."
              },
              "return": "Returns remaining allowance for spender."
            },
            "approve(address,uint256)": {
              "details": "Sets approved amount of tokens for spender. Returns success.",
              "params": {
                "_spender": "Address of allowed account.",
                "_value": "Number of approved tokens."
              },
              "return": "Returns success of function call."
            },
            "balanceOf(address)": {
              "details": "Returns number of tokens owned by the given address.",
              "params": {
                "_owner": "Address of token owner."
              },
              "return": "Returns balance of owner."
            },
            "transfer(address,uint256)": {
              "details": "Transfers sender's tokens to a given address. Returns success.",
              "params": {
                "_to": "Address of token receiver.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transfer(address,uint256,bytes)": {
              "details": "Function that is called when a user or another contract wants to transfer funds.",
              "params": {
                "_data": "Data to be sent to tokenFallback",
                "_to": "Address of token receiver.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transferFrom(address,address,uint256)": {
              "details": "Allows for an approved third party to transfer tokens from one address to another. Returns success.",
              "params": {
                "_from": "Address from where tokens are withdrawn.",
                "_to": "Address to where tokens are sent.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            }
          },
          "title": "CustomToken"
        },
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "Allows `_spender` to transfer `_value` tokens from `msg.sender` to any address."
            },
            "mint()": {
              "notice": "Allows tokens to be minted and assigned to `msg.sender` For `msg.value >= 100 finney`, the sender receives 50 tokens"
            },
            "transfer(address,uint256)": {
              "notice": "Send `_value` tokens to `_to` from `msg.sender`."
            },
            "transfer(address,uint256,bytes)": {
              "notice": "Send `_value` tokens to `_to` from `msg.sender` and trigger tokenFallback if sender is a contract."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `_value` tokens from `_from` to `_to` if `msg.sender` is allowed."
            },
            "transferFunds()": {
              "notice": "Transfers the collected ETH to the contract owner."
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/test/CustomToken.sol": "CustomToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/Token.sol": {
          "keccak256": "0x1e5e5ba7b6f38523dc1faa1e2c0af2c78614b64143e3b209095982c5ec657bf0",
          "urls": [
            "bzzr://c54e35e2b7062c8d3da72f884ce75ace360922cf7b2abf035dbc4ec0ff6a9597"
          ]
        },
        "contracts/test/CustomToken.sol": {
          "keccak256": "0x351018010e4959fc4ad1d91b922de1fdb9e64e699bd5b5527934602b041bfa2a",
          "urls": [
            "bzzr://0e14e38f066d12be7215ce153fd554b697645ffc0d00290738352fe37b4bd0f5"
          ]
        },
        "contracts/test/ERC223ReceivingContract.sol": {
          "keccak256": "0xc1e82e44f83aead783d0088b50e88caf9c39e21288985eaa207768d5db604f35",
          "urls": [
            "bzzr://2abdc354558b80f5e3ec08e4ca6e9a1b7cacf45c726a4b0b93d27cecd6e338d2"
          ]
        },
        "contracts/test/StandardToken.sol": {
          "keccak256": "0x4e5fe4180c1409652b9950e64cde6ea860a4917a061b486af769a6a88e24f798",
          "urls": [
            "bzzr://0bb170e4b6e73cdcbb7f3d18459200695f39bddafdf4d9774c0f3b010f4a9a45"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {
        "approve(address,uint256)": {
          "notice": "Allows `_spender` to transfer `_value` tokens from `msg.sender` to any address."
        },
        "mint()": {
          "notice": "Allows tokens to be minted and assigned to `msg.sender` For `msg.value >= 100 finney`, the sender receives 50 tokens"
        },
        "transfer(address,uint256)": {
          "notice": "Send `_value` tokens to `_to` from `msg.sender`."
        },
        "transfer(address,uint256,bytes)": {
          "notice": "Send `_value` tokens to `_to` from `msg.sender` and trigger tokenFallback if sender is a contract."
        },
        "transferFrom(address,address,uint256)": {
          "notice": "Transfer `_value` tokens from `_from` to `_to` if `msg.sender` is allowed."
        },
        "transferFunds()": {
          "notice": "Transfers the collected ETH to the contract owner."
        }
      }
    }
  },
  "ECVerify": {
    "abi": [],
    "bytecode": "0x60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a723058201f321030e4cc5f3f0f5638dc97f8e362afd07a10a9287b7c39ea6fb0b386d2600029",
    "bytecode_runtime": "0x6060604052600080fd00a165627a7a723058201f321030e4cc5f3f0f5638dc97f8e362afd07a10a9287b7c39ea6fb0b386d2600029",
    "devdoc": {
      "methods": {}
    },
    "metadata": {
      "compiler": {
        "version": "0.4.17+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [],
        "devdoc": {
          "methods": {}
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/lib/ECVerify.sol": "ECVerify"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/lib/ECVerify.sol": {
          "keccak256": "0x299e3d97791734a4c2a5b8e6a3610220633f0ca1552d73532b59b302b047b2db",
          "urls": [
            "bzzr://18bbecd14c52b2bf69556cd93c9428ed8e5c8bad4a5afd045847649e375cc673"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "ECVerifyTest": {
    "abi": [
      {
        "constant": true,
        "inputs": [
          {
            "name": "_message",
            "type": "bytes32"
          },
          {
            "name": "_signed_message",
            "type": "bytes"
          }
        ],
        "name": "verify",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "hash",
            "type": "bytes32"
          },
          {
            "name": "r",
            "type": "bytes32"
          },
          {
            "name": "s",
            "type": "bytes32"
          },
          {
            "name": "v",
            "type": "uint8"
          }
        ],
        "name": "verify_ecrecover_output",
        "outputs": [
          {
            "name": "signature_address",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_address",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint32"
          },
          {
            "name": "_value2",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "verifyEthSignedTypedData",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b6106328061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063258ae582146100535780639c1eddbc146100fd578063ae7a44e21461018a57600080fd5b341561005e57600080fd5b6100bb60048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610278565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010857600080fd5b610148600480803560001916906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050610291565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561019557600080fd5b610236600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061034d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008061028584846104ea565b90508091505092915050565b6000600185838686604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f1151561031157600080fd5b505060206040510351905060008173ffffffffffffffffffffffffffffffffffffffff161415151561034257600080fd5b809050949350505050565b600080600060405180807f6164647265737320416464726573730000000000000000000000000000000000815250600f01807f75696e7433322056616c75650000000000000000000000000000000000000000815250600c01807f75696e743139322056616c756532000000000000000000000000000000000000815250600e0190506040518091039020878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018363ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff166801000000000000000002815260180193505050506040518091039020604051808360001916600019168152602001826000191660001916815260200192505050604051809103902091506104db82856104ea565b90508092505050949350505050565b6000806000806041855114151561050057600080fd5b6020850151925060408501519150606085015160001a9050601b8160ff16101561052b57601b810190505b601b8160ff1614806105405750601c8160ff16145b151561054b57600080fd5b600186828585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f115156105c957600080fd5b505060206040510351935060008473ffffffffffffffffffffffffffffffffffffffff16141515156105fa57600080fd5b839350505050929150505600a165627a7a72305820d6fd99bb7a93315bd8dc37ae5e791a1a6ec23fd32dcc2cc8334866a552915cb60029",
    "bytecode_runtime": "0x60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063258ae582146100535780639c1eddbc146100fd578063ae7a44e21461018a57600080fd5b341561005e57600080fd5b6100bb60048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610278565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010857600080fd5b610148600480803560001916906020019091908035600019169060200190919080356000191690602001909190803560ff16906020019091905050610291565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561019557600080fd5b610236600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061034d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008061028584846104ea565b90508091505092915050565b6000600185838686604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f1151561031157600080fd5b505060206040510351905060008173ffffffffffffffffffffffffffffffffffffffff161415151561034257600080fd5b809050949350505050565b600080600060405180807f6164647265737320416464726573730000000000000000000000000000000000815250600f01807f75696e7433322056616c75650000000000000000000000000000000000000000815250600c01807f75696e743139322056616c756532000000000000000000000000000000000000815250600e0190506040518091039020878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018363ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff166801000000000000000002815260180193505050506040518091039020604051808360001916600019168152602001826000191660001916815260200192505050604051809103902091506104db82856104ea565b90508092505050949350505050565b6000806000806041855114151561050057600080fd5b6020850151925060408501519150606085015160001a9050601b8160ff16101561052b57601b810190505b601b8160ff1614806105405750601c8160ff16145b151561054b57600080fd5b600186828585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f115156105c957600080fd5b505060206040510351935060008473ffffffffffffffffffffffffffffffffffffffff16141515156105fa57600080fd5b839350505050929150505600a165627a7a72305820d6fd99bb7a93315bd8dc37ae5e791a1a6ec23fd32dcc2cc8334866a552915cb60029",
    "devdoc": {
      "methods": {}
    },
    "metadata": {
      "compiler": {
        "version": "0.4.17+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [
              {
                "name": "_message",
                "type": "bytes32"
              },
              {
                "name": "_signed_message",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "hash",
                "type": "bytes32"
              },
              {
                "name": "r",
                "type": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32"
              },
              {
                "name": "v",
                "type": "uint8"
              }
            ],
            "name": "verify_ecrecover_output",
            "outputs": [
              {
                "name": "signature_address",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_address",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint32"
              },
              {
                "name": "_value2",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "verifyEthSignedTypedData",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "devdoc": {
          "methods": {}
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/test/ECVerifyTest.sol": "ECVerifyTest"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/lib/ECVerify.sol": {
          "keccak256": "0x299e3d97791734a4c2a5b8e6a3610220633f0ca1552d73532b59b302b047b2db",
          "urls": [
            "bzzr://18bbecd14c52b2bf69556cd93c9428ed8e5c8bad4a5afd045847649e375cc673"
          ]
        },
        "contracts/test/ECVerifyTest.sol": {
          "keccak256": "0x59c060f1cfcf9200ebcfd19bb3f53b5638fdc9d6b053285ad5192ca9418d9e44",
          "urls": [
            "bzzr://c0e7a9fd28efdce240efa36190551f9bf2867cbf4e0ef86752939cc98c9084fc"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "ERC223ReceivingContract": {
    "abi": [
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "tokenFallback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {
        "tokenFallback(address,uint256,bytes)": {
          "details": "Function that is called when a user or another contract wants to transfer funds.",
          "params": {
            "_data": "Data containig a function signature and/or parameters",
            "_from": "Transaction initiator, analogue of msg.sender",
            "_value": "Number of tokens to transfer."
          }
        }
      },
      "title": "ERC223ReceivingContract - contract implementation for compatibility with ERC223 tokens."
    },
    "metadata": null,
    "userdoc": {
      "methods": {}
    }
  },
  "RaidenMicroTransferChannels": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "challenge_period",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_sender_address",
            "type": "address"
          },
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "getChannelInfo",
        "outputs": [
          {
            "name": "",
            "type": "bytes32"
          },
          {
            "name": "",
            "type": "uint192"
          },
          {
            "name": "",
            "type": "uint32"
          },
          {
            "name": "",
            "type": "uint192"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          },
          {
            "name": "_closing_sig",
            "type": "bytes"
          }
        ],
        "name": "cooperativeClose",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_latest_version_address",
            "type": "address"
          }
        ],
        "name": "setLatestVersionAddress",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "version",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "createChannelERC20",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "settle",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "latest_version_address",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "verifyBalanceProof",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_sender_address",
            "type": "address"
          },
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          }
        ],
        "name": "getKey",
        "outputs": [
          {
            "name": "data",
            "type": "bytes32"
          }
        ],
        "payable": false,
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "owner_address",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "token_address",
        "outputs": [
          {
            "name": "",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_balance",
            "type": "uint192"
          },
          {
            "name": "_balance_msg_sig",
            "type": "bytes"
          }
        ],
        "name": "uncooperativeClose",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_sender_address",
            "type": "address"
          },
          {
            "name": "_deposit",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "tokenFallback",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_receiver_address",
            "type": "address"
          },
          {
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "name": "_added_deposit",
            "type": "uint192"
          }
        ],
        "name": "topUpERC20",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_token_address",
            "type": "address"
          },
          {
            "name": "_challenge_period",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "ChannelCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "indexed": false,
            "name": "_added_deposit",
            "type": "uint192"
          },
          {
            "indexed": false,
            "name": "_deposit",
            "type": "uint192"
          }
        ],
        "name": "ChannelToppedUp",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "indexed": false,
            "name": "_balance",
            "type": "uint192"
          }
        ],
        "name": "ChannelCloseRequested",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_sender",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_receiver",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_open_block_number",
            "type": "uint32"
          },
          {
            "indexed": false,
            "name": "_balance",
            "type": "uint192"
          }
        ],
        "name": "ChannelSettled",
        "type": "event"
      }
    ],
    "bytecode": "0x606060405234156200001057600080fd5b6040516040806200239d8339810160405280805190602001909190805190602001909190505060008273ffffffffffffffffffffffffffffffffffffffff16141515156200005d57600080fd5b6200007c82620001806401000000000262001841176401000000009004565b15156200008857600080fd5b60008160ff161115156200009b57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548160ff021916908360ff160217905550505062000193565b600080823b905060008111915050919050565b6121fa80620001a36000396000f300606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a00840c146100de5780630eba6b061461010d5780631c6f609b14610219578063355f49c8146102ac57806354fd4d50146102e55780635989c283146103735780635a8e9d66146103cf5780635b695f81146104175780636c68c8371461046c578063803c83831461055a57806380edef8e146105dd5780638c8e8fee146106325780638df4893514610687578063c0ee0b8a14610706578063ce90bafa1461075c575b600080fd5b34156100e957600080fd5b6100f16107c7565b604051808260ff1660ff16815260200191505060405180910390f35b341561011857600080fd5b610172600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff169060200190919050506107da565b6040518085600019166000191681526020018477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b341561022457600080fd5b6102aa600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019190919290803590602001908201803590602001919091929050506108fa565b005b34156102b757600080fd5b6102e3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a2c565b005b34156102f057600080fd5b6102f8610adf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033857808201518184015260208101905061031d565b50505050905090810190601f1680156103655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037e57600080fd5b6103cd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b005b34156103da57600080fd5b610415600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610c68565b005b341561042257600080fd5b61042a610d4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561047757600080fd5b610518600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610d75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561056557600080fd5b6105bf600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610f12565b60405180826000191660001916815260200191505060405180910390f35b34156105e857600080fd5b6105f0610fe4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561063d57600080fd5b610645611009565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561069257600080fd5b610704600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019190919290505061102f565b005b341561071157600080fd5b61075a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190820180359060200191909192905050611116565b005b341561076757600080fd5b6107c5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050611240565b005b600160149054906101000a900460ff1681565b60008060008060006107ed888888610f12565b9050600060046000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1611151561083257600080fd5b8060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1660056000846000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1660056000856000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1694509450945094505093509350935093565b60008060418686905014151561090f57600080fd5b60418484905014151561092157600080fd5b61095f89898987878080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b91508873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561099b57600080fd5b6109d989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1557600080fd5b610a2181838a8a611392565b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a8757600080fd5b610a9081611841565b1515610a9b57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040805190810160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b610b23338383611854565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b1515610c3e57600080fd5b6102c65a03f11515610c4f57600080fd5b505050604051805190501515610c6457600080fd5b5050565b6000610c75338484610f12565b9050600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111515610cba57600080fd5b60056000826000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1643111515610cfc57600080fd5b610d4a33848460056000866000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16611392565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060405180807f6164647265737320726563656976657200000000000000000000000000000000815250601001807f75696e74333220626c6f636b5f63726561746564000000000000000000000000815250601401807f75696e743139322062616c616e63650000000000000000000000000000000000815250600f0190506040518091039020878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018363ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16680100000000000000000281526018019350505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209150610f038285611ac1565b90508092505050949350505050565b6000838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018263ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004019350505050604051809103902090509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060418383905014151561104357600080fd5b61108186868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b90508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110c8576110c381878787611392565b61110e565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110257600080fd5b61110d868686611bdd565b5b505050505050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561117757600080fd5b848490509250601483148061118c5750601883145b151561119757600080fd5b6111d285858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611e10565b915060148314156111ed576111e8878388611854565b611237565b61122885858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611e33565b905061123687838389611e66565b5b50505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b151561135b57600080fd5b6102c65a03f1151561136c57600080fd5b50505060405180519050151561138157600080fd5b61138d33848484611e66565b505050565b600061139c612194565b6113a7868686610f12565b91506004600083600019166000191681526020019081526020016000206040805190810160405290816000820160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816020015163ffffffff1611151561147257600080fd5b806000015177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff16111515156114b957600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15156115a057600080fd5b6102c65a03f115156115b157600080fd5b5050506040518051905015156115c657600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87858460000151036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15156116b357600080fd5b6102c65a03f115156116c457600080fd5b5050506040518051905015156116d957600080fd5b600460008360001916600019168152602001908152602001600020600080820160006101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690556000820160186101000a81549063ffffffff02191690555050600560008360001916600019168152602001908152602001600020600080820160006101000a81549063ffffffff02191690556000820160046101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff021916905550508363ffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7fb158c552965b9b427aaef16f3a7129dc51eb0107dec41f4a3fdd82e948bccc86604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a4505050505050565b600080823b905060008111915050919050565b600080439150611865858584610f12565b9050600060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161415156118d257600080fd5b600060046000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1614151561191557600080fd5b600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1614151561195857600080fd5b60408051908101604052808477ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681525060046000836000191660001916815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f986876e67d288f7b8bc5229976a1d5710be919feb66d2e1aec1bf3eadebba20785604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35050505050565b60008060008060418551141515611ad757600080fd5b6020850151925060408501519150606085015160001a9050601b8160ff161015611b0257601b810190505b601b8160ff161480611b175750601c8160ff16145b1515611b2257600080fd5b600186828585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f11515611ba057600080fd5b505060206040510351935060008473ffffffffffffffffffffffffffffffffffffffff1614151515611bd157600080fd5b83935050505092915050565b6000611bea338585610f12565b9050600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16141515611c2f57600080fd5b60046000826000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff168277ffffffffffffffffffffffffffffffffffffffffffffffff1611151515611cb457600080fd5b600160149054906101000a900460ff1660ff16430160056000836000191660001916815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055508160056000836000191660001916815260200190815260200160002060000160046101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508263ffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f960e55a871be40c817ffd64e2117c513e42f047ccfdcbc5454e68dfc65e9a9b085604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a450505050565b60008060208301519050806c010000000000000000000000009004915050919050565b60008060348301519050807c01000000000000000000000000000000000000000000000000000000009004915050919050565b6000808277ffffffffffffffffffffffffffffffffffffffffffffffff16111515611e9057600080fd5b60008363ffffffff16111515611ea557600080fd5b611eb0858585610f12565b9050600060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16111515611f1d57600080fd5b600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16141515611f6057600080fd5b8160046000836000191660001916815260200190815260200160002060000160008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508177ffffffffffffffffffffffffffffffffffffffffffffffff1660046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1611151561206f57fe5b8263ffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd82312427ef3424f12c51e82f864c3f808db9b127ed40f745ba5d11dcc65782d8560046000876000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16604051808377ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a45050505050565b6040805190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815250905600a165627a7a723058200a3608a9c7066b2e06c0b9788954cee533ecc515f6f5496db219859e707fc99e0029",
    "bytecode_runtime": "0x606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a00840c146100de5780630eba6b061461010d5780631c6f609b14610219578063355f49c8146102ac57806354fd4d50146102e55780635989c283146103735780635a8e9d66146103cf5780635b695f81146104175780636c68c8371461046c578063803c83831461055a57806380edef8e146105dd5780638c8e8fee146106325780638df4893514610687578063c0ee0b8a14610706578063ce90bafa1461075c575b600080fd5b34156100e957600080fd5b6100f16107c7565b604051808260ff1660ff16815260200191505060405180910390f35b341561011857600080fd5b610172600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff169060200190919050506107da565b6040518085600019166000191681526020018477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b341561022457600080fd5b6102aa600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019190919290803590602001908201803590602001919091929050506108fa565b005b34156102b757600080fd5b6102e3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a2c565b005b34156102f057600080fd5b6102f8610adf565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033857808201518184015260208101905061031d565b50505050905090810190601f1680156103655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037e57600080fd5b6103cd600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b005b34156103da57600080fd5b610415600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610c68565b005b341561042257600080fd5b61042a610d4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561047757600080fd5b610518600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610d75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561056557600080fd5b6105bf600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff16906020019091905050610f12565b60405180826000191660001916815260200191505060405180910390f35b34156105e857600080fd5b6105f0610fe4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561063d57600080fd5b610645611009565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561069257600080fd5b610704600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019082018035906020019190919290505061102f565b005b341561071157600080fd5b61075a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190820180359060200191909192905050611116565b005b341561076757600080fd5b6107c5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803577ffffffffffffffffffffffffffffffffffffffffffffffff16906020019091905050611240565b005b600160149054906101000a900460ff1681565b60008060008060006107ed888888610f12565b9050600060046000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1611151561083257600080fd5b8060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1660056000846000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1660056000856000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1694509450945094505093509350935093565b60008060418686905014151561090f57600080fd5b60418484905014151561092157600080fd5b61095f89898987878080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b91508873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151561099b57600080fd5b6109d989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1557600080fd5b610a2181838a8a611392565b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a8757600080fd5b610a9081611841565b1515610a9b57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040805190810160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b610b23338383611854565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b1515610c3e57600080fd5b6102c65a03f11515610c4f57600080fd5b505050604051805190501515610c6457600080fd5b5050565b6000610c75338484610f12565b9050600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16111515610cba57600080fd5b60056000826000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1643111515610cfc57600080fd5b610d4a33848460056000866000191660001916815260200190815260200160002060000160049054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16611392565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600060405180807f6164647265737320726563656976657200000000000000000000000000000000815250601001807f75696e74333220626c6f636b5f63726561746564000000000000000000000000815250601401807f75696e743139322062616c616e63650000000000000000000000000000000000815250600f0190506040518091039020878787604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018363ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16680100000000000000000281526018019350505050604051809103902060405180836000191660001916815260200182600019166000191681526020019250505060405180910390209150610f038285611ac1565b90508092505050949350505050565b6000838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018263ffffffff1663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004019350505050604051809103902090509392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060418383905014151561104357600080fd5b61108186868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610d75565b90508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110c8576110c381878787611392565b61110e565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561110257600080fd5b61110d868686611bdd565b5b505050505050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561117757600080fd5b848490509250601483148061118c5750601883145b151561119757600080fd5b6111d285858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611e10565b915060148314156111ed576111e8878388611854565b611237565b61122885858080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611e33565b905061123687838389611e66565b5b50505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019350505050602060405180830381600087803b151561135b57600080fd5b6102c65a03f1151561136c57600080fd5b50505060405180519050151561138157600080fd5b61138d33848484611e66565b505050565b600061139c612194565b6113a7868686610f12565b91506004600083600019166000191681526020019081526020016000206040805190810160405290816000820160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020016000820160189054906101000a900463ffffffff1663ffffffff1663ffffffff168152505090506000816020015163ffffffff1611151561147257600080fd5b806000015177ffffffffffffffffffffffffffffffffffffffffffffffff168377ffffffffffffffffffffffffffffffffffffffffffffffff16111515156114b957600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86856000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15156115a057600080fd5b6102c65a03f115156115b157600080fd5b5050506040518051905015156115c657600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87858460000151036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15156116b357600080fd5b6102c65a03f115156116c457600080fd5b5050506040518051905015156116d957600080fd5b600460008360001916600019168152602001908152602001600020600080820160006101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff02191690556000820160186101000a81549063ffffffff02191690555050600560008360001916600019168152602001908152602001600020600080820160006101000a81549063ffffffff02191690556000820160046101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff021916905550508363ffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7fb158c552965b9b427aaef16f3a7129dc51eb0107dec41f4a3fdd82e948bccc86604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a4505050505050565b600080823b905060008111915050919050565b600080439150611865858584610f12565b9050600060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff161415156118d257600080fd5b600060046000836000191660001916815260200190815260200160002060000160189054906101000a900463ffffffff1663ffffffff1614151561191557600080fd5b600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1614151561195857600080fd5b60408051908101604052808477ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1681525060046000836000191660001916815260200190815260200160002060008201518160000160006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160186101000a81548163ffffffff021916908363ffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f986876e67d288f7b8bc5229976a1d5710be919feb66d2e1aec1bf3eadebba20785604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a35050505050565b60008060008060418551141515611ad757600080fd5b6020850151925060408501519150606085015160001a9050601b8160ff161015611b0257601b810190505b601b8160ff161480611b175750601c8160ff16145b1515611b2257600080fd5b600186828585604051600081526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff16815260200183600019166000191681526020018260001916600019168152602001945050505050602060405160208103908084039060008661646e5a03f11515611ba057600080fd5b505060206040510351935060008473ffffffffffffffffffffffffffffffffffffffff1614151515611bd157600080fd5b83935050505092915050565b6000611bea338585610f12565b9050600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16141515611c2f57600080fd5b60046000826000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff168277ffffffffffffffffffffffffffffffffffffffffffffffff1611151515611cb457600080fd5b600160149054906101000a900460ff1660ff16430160056000836000191660001916815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055508160056000836000191660001916815260200190815260200160002060000160046101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508263ffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f960e55a871be40c817ffd64e2117c513e42f047ccfdcbc5454e68dfc65e9a9b085604051808277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a450505050565b60008060208301519050806c010000000000000000000000009004915050919050565b60008060348301519050807c01000000000000000000000000000000000000000000000000000000009004915050919050565b6000808277ffffffffffffffffffffffffffffffffffffffffffffffff16111515611e9057600080fd5b60008363ffffffff16111515611ea557600080fd5b611eb0858585610f12565b9050600060046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff16111515611f1d57600080fd5b600060056000836000191660001916815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16141515611f6057600080fd5b8160046000836000191660001916815260200190815260200160002060000160008282829054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff160192506101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff1602179055508177ffffffffffffffffffffffffffffffffffffffffffffffff1660046000836000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1611151561206f57fe5b8263ffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd82312427ef3424f12c51e82f864c3f808db9b127ed40f745ba5d11dcc65782d8560046000876000191660001916815260200190815260200160002060000160009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16604051808377ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a45050505050565b6040805190810160405280600077ffffffffffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815250905600a165627a7a723058200a3608a9c7066b2e06c0b9788954cee533ecc515f6f5496db219859e707fc99e0029",
    "devdoc": {
      "methods": {
        "cooperativeClose(address,uint32,uint192,bytes,bytes)": {
          "details": "Function called by the sender, when he has a closing signature from the receiver; channel is closed immediately.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_closing_sig": "The hash of the signed balance message, signed by the receiver.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens."
          }
        },
        "createChannelERC20(address,uint192)": {
          "details": "Creates a new channel between a sender and a receiver and transfers the sender's token deposit to this contract, compatibility with ERC20 tokens.",
          "params": {
            "_deposit": "The amount of tokens that the sender escrows.",
            "_receiver_address": "The address that receives tokens."
          }
        },
        "getChannelInfo(address,address,uint32)": {
          "details": "Function for getting information about a channel.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens.",
            "_sender_address": "The address that sends tokens."
          },
          "return": "Channel information (unique_identifier, deposit, settle_block_number, closing_balance)."
        },
        "getKey(address,address,uint32)": {
          "details": "Returns the unique channel identifier used in the contract.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens.",
            "_sender_address": "The address that sends tokens."
          },
          "return": "Unique channel identifier."
        },
        "setLatestVersionAddress(address)": {
          "details": "Sets the address for the latest contract version",
          "params": {
            "_latest_version_address": "The address for the latest contract version."
          }
        },
        "settle(address,uint32)": {
          "details": "Function called by the sender after the challenge period has ended, in case the receiver has not closed the channel.",
          "params": {
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens."
          }
        },
        "tokenFallback(address,uint256,bytes)": {
          "details": "Opens a new channel or tops up an existing one, compatibility with ERC 223; msg.sender is Token contract.",
          "params": {
            "_data": "Receiver address in bytes.",
            "_deposit": "The amount of tokens that the sender escrows.",
            "_sender_address": "The address that sends the tokens."
          }
        },
        "topUpERC20(address,uint32,uint192)": {
          "details": "Increase the sender's current deposit.",
          "params": {
            "_added_deposit": "The added token deposit with which the current deposit is increased.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens."
          }
        },
        "uncooperativeClose(address,uint32,uint192,bytes)": {
          "details": "Function called when any of the parties wants to close the channel and settle; receiver needs a balance proof to immediately settle, sender triggers a challenge period.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens."
          }
        },
        "verifyBalanceProof(address,uint32,uint192,bytes)": {
          "details": "Returns the sender address extracted from the balance proof. Works with eth_signTypedData https://github.com/ethereum/EIPs/pull/712.",
          "params": {
            "_balance": "The amount of tokens owed by the sender to the receiver.",
            "_balance_msg_sig": "The balance message signed by the sender.",
            "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
            "_receiver_address": "The address that receives tokens."
          },
          "return": "Address of the balance proof signer."
        }
      },
      "title": "Raiden MicroTransfer Channels Contract."
    },
    "metadata": {
      "compiler": {
        "version": "0.4.17+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "challenge_period",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_sender_address",
                "type": "address"
              },
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "getChannelInfo",
            "outputs": [
              {
                "name": "",
                "type": "bytes32"
              },
              {
                "name": "",
                "type": "uint192"
              },
              {
                "name": "",
                "type": "uint32"
              },
              {
                "name": "",
                "type": "uint192"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              },
              {
                "name": "_closing_sig",
                "type": "bytes"
              }
            ],
            "name": "cooperativeClose",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_latest_version_address",
                "type": "address"
              }
            ],
            "name": "setLatestVersionAddress",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "createChannelERC20",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "settle",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "latest_version_address",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "verifyBalanceProof",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_sender_address",
                "type": "address"
              },
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              }
            ],
            "name": "getKey",
            "outputs": [
              {
                "name": "data",
                "type": "bytes32"
              }
            ],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner_address",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "token_address",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_balance",
                "type": "uint192"
              },
              {
                "name": "_balance_msg_sig",
                "type": "bytes"
              }
            ],
            "name": "uncooperativeClose",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_sender_address",
                "type": "address"
              },
              {
                "name": "_deposit",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "tokenFallback",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_receiver_address",
                "type": "address"
              },
              {
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "name": "_added_deposit",
                "type": "uint192"
              }
            ],
            "name": "topUpERC20",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_token_address",
                "type": "address"
              },
              {
                "name": "_challenge_period",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "ChannelCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "indexed": false,
                "name": "_added_deposit",
                "type": "uint192"
              },
              {
                "indexed": false,
                "name": "_deposit",
                "type": "uint192"
              }
            ],
            "name": "ChannelToppedUp",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "indexed": false,
                "name": "_balance",
                "type": "uint192"
              }
            ],
            "name": "ChannelCloseRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_sender",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_receiver",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_open_block_number",
                "type": "uint32"
              },
              {
                "indexed": false,
                "name": "_balance",
                "type": "uint192"
              }
            ],
            "name": "ChannelSettled",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "cooperativeClose(address,uint32,uint192,bytes,bytes)": {
              "details": "Function called by the sender, when he has a closing signature from the receiver; channel is closed immediately.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_closing_sig": "The hash of the signed balance message, signed by the receiver.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens."
              }
            },
            "createChannelERC20(address,uint192)": {
              "details": "Creates a new channel between a sender and a receiver and transfers the sender's token deposit to this contract, compatibility with ERC20 tokens.",
              "params": {
                "_deposit": "The amount of tokens that the sender escrows.",
                "_receiver_address": "The address that receives tokens."
              }
            },
            "getChannelInfo(address,address,uint32)": {
              "details": "Function for getting information about a channel.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens.",
                "_sender_address": "The address that sends tokens."
              },
              "return": "Channel information (unique_identifier, deposit, settle_block_number, closing_balance)."
            },
            "getKey(address,address,uint32)": {
              "details": "Returns the unique channel identifier used in the contract.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens.",
                "_sender_address": "The address that sends tokens."
              },
              "return": "Unique channel identifier."
            },
            "setLatestVersionAddress(address)": {
              "details": "Sets the address for the latest contract version",
              "params": {
                "_latest_version_address": "The address for the latest contract version."
              }
            },
            "settle(address,uint32)": {
              "details": "Function called by the sender after the challenge period has ended, in case the receiver has not closed the channel.",
              "params": {
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens."
              }
            },
            "tokenFallback(address,uint256,bytes)": {
              "details": "Opens a new channel or tops up an existing one, compatibility with ERC 223; msg.sender is Token contract.",
              "params": {
                "_data": "Receiver address in bytes.",
                "_deposit": "The amount of tokens that the sender escrows.",
                "_sender_address": "The address that sends the tokens."
              }
            },
            "topUpERC20(address,uint32,uint192)": {
              "details": "Increase the sender's current deposit.",
              "params": {
                "_added_deposit": "The added token deposit with which the current deposit is increased.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens."
              }
            },
            "uncooperativeClose(address,uint32,uint192,bytes)": {
              "details": "Function called when any of the parties wants to close the channel and settle; receiver needs a balance proof to immediately settle, sender triggers a challenge period.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens."
              }
            },
            "verifyBalanceProof(address,uint32,uint192,bytes)": {
              "details": "Returns the sender address extracted from the balance proof. Works with eth_signTypedData https://github.com/ethereum/EIPs/pull/712.",
              "params": {
                "_balance": "The amount of tokens owed by the sender to the receiver.",
                "_balance_msg_sig": "The balance message signed by the sender.",
                "_open_block_number": "The block number at which a channel between the sender and receiver was created.",
                "_receiver_address": "The address that receives tokens."
              },
              "return": "Address of the balance proof signer."
            }
          },
          "title": "Raiden MicroTransfer Channels Contract."
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/RaidenMicroTransferChannels.sol": "RaidenMicroTransferChannels"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/RaidenMicroTransferChannels.sol": {
          "keccak256": "0xad52982cf15f4ed647f2bc5a69843037a2a42d01e06c198118ee7824a327a7de",
          "urls": [
            "bzzr://882fdad4399a5c0e4ce7285f27483ccb367072b47e98933e85b001009ec3185a"
          ]
        },
        "contracts/Token.sol": {
          "keccak256": "0x1e5e5ba7b6f38523dc1faa1e2c0af2c78614b64143e3b209095982c5ec657bf0",
          "urls": [
            "bzzr://c54e35e2b7062c8d3da72f884ce75ace360922cf7b2abf035dbc4ec0ff6a9597"
          ]
        },
        "contracts/lib/ECVerify.sol": {
          "keccak256": "0x299e3d97791734a4c2a5b8e6a3610220633f0ca1552d73532b59b302b047b2db",
          "urls": [
            "bzzr://18bbecd14c52b2bf69556cd93c9428ed8e5c8bad4a5afd045847649e375cc673"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  },
  "StandardToken": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      }
    ],
    "bytecode": "0x6060604052341561000f57600080fd5b610fc38061001e6000396000f300606060405236156100a2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100a7578063095ea7b31461013557806318160ddd1461018f57806323b872dd146101b8578063313ce5671461023157806370a082311461026057806395d89b41146102ad578063a9059cbb1461033b578063be45fd6214610395578063dd62ed3e14610432575b600080fd5b34156100b257600080fd5b6100ba61049e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fa5780820151818401526020810190506100df565b50505050905090810190601f1680156101275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014057600080fd5b610175600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061053c565b604051808215151515815260200191505060405180910390f35b341561019a57600080fd5b6101a26106e9565b6040518082815260200191505060405180910390f35b34156101c357600080fd5b610217600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106ef565b604051808215151515815260200191505060405180910390f35b341561023c57600080fd5b610244610a73565b604051808260ff1660ff16815260200191505060405180910390f35b341561026b57600080fd5b610297600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a86565b6040518082815260200191505060405180910390f35b34156102b857600080fd5b6102c0610acf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103005780820151818401526020810190506102e5565b50505050905090810190601f16801561032d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561034657600080fd5b61037b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b6d565b604051808215151515815260200191505060405180910390f35b34156103a057600080fd5b610418600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610db5565b604051808215151515815260200191505060405180910390f35b341561043d57600080fd5b610488600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f10565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff161415151561056357600080fd5b60008214806105ee57506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15156105f957600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b6000808473ffffffffffffffffffffffffffffffffffffffff161415151561071657600080fd5b60008373ffffffffffffffffffffffffffffffffffffffff161415151561073c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561077757600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156107c557600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561085057600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401101515156108df57600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b655780601f10610b3a57610100808354040283529160200191610b65565b820191906000526020600020905b815481529060010190602001808311610b4857829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515610b9457600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bcf57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c1d57600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515610cac57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000806000610dc48686610b6d565b1515610dcf57600080fd5b853b91506000821115610f03578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ea1578082015181840152602081019050610e86565b50505050905090810190601f168015610ece5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610eee57600080fd5b6102c65a03f11515610eff57600080fd5b5050505b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820bf05756294ded7f29995af0b8b3596c4f635f6220fb7a7b9320bea3baef490290029",
    "bytecode_runtime": "0x606060405236156100a2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100a7578063095ea7b31461013557806318160ddd1461018f57806323b872dd146101b8578063313ce5671461023157806370a082311461026057806395d89b41146102ad578063a9059cbb1461033b578063be45fd6214610395578063dd62ed3e14610432575b600080fd5b34156100b257600080fd5b6100ba61049e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fa5780820151818401526020810190506100df565b50505050905090810190601f1680156101275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014057600080fd5b610175600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061053c565b604051808215151515815260200191505060405180910390f35b341561019a57600080fd5b6101a26106e9565b6040518082815260200191505060405180910390f35b34156101c357600080fd5b610217600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106ef565b604051808215151515815260200191505060405180910390f35b341561023c57600080fd5b610244610a73565b604051808260ff1660ff16815260200191505060405180910390f35b341561026b57600080fd5b610297600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a86565b6040518082815260200191505060405180910390f35b34156102b857600080fd5b6102c0610acf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103005780820151818401526020810190506102e5565b50505050905090810190601f16801561032d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561034657600080fd5b61037b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b6d565b604051808215151515815260200191505060405180910390f35b34156103a057600080fd5b610418600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610db5565b604051808215151515815260200191505060405180910390f35b341561043d57600080fd5b610488600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f10565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff161415151561056357600080fd5b60008214806105ee57506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15156105f957600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b6000808473ffffffffffffffffffffffffffffffffffffffff161415151561071657600080fd5b60008373ffffffffffffffffffffffffffffffffffffffff161415151561073c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561077757600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156107c557600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561085057600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401101515156108df57600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b655780601f10610b3a57610100808354040283529160200191610b65565b820191906000526020600020905b815481529060010190602001808311610b4857829003601f168201915b505050505081565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515610b9457600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bcf57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610c1d57600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110151515610cac57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000806000610dc48686610b6d565b1515610dcf57600080fd5b853b91506000821115610f03578590508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3387876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ea1578082015181840152602081019050610e86565b50505050905090810190601f168015610ece5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610eee57600080fd5b6102c65a03f11515610eff57600080fd5b5050505b6001925050509392505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050929150505600a165627a7a72305820bf05756294ded7f29995af0b8b3596c4f635f6220fb7a7b9320bea3baef490290029",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "Returns number of allowed tokens that a spender can transfer on behalf of a token owner.",
          "params": {
            "_owner": "Address of token owner.",
            "_spender": "Address of token spender."
          },
          "return": "Returns remaining allowance for spender."
        },
        "approve(address,uint256)": {
          "details": "Sets approved amount of tokens for spender. Returns success.",
          "params": {
            "_spender": "Address of allowed account.",
            "_value": "Number of approved tokens."
          },
          "return": "Returns success of function call."
        },
        "balanceOf(address)": {
          "details": "Returns number of tokens owned by the given address.",
          "params": {
            "_owner": "Address of token owner."
          },
          "return": "Returns balance of owner."
        },
        "transfer(address,uint256)": {
          "details": "Transfers sender's tokens to a given address. Returns success.",
          "params": {
            "_to": "Address of token receiver.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transfer(address,uint256,bytes)": {
          "details": "Function that is called when a user or another contract wants to transfer funds.",
          "params": {
            "_data": "Data to be sent to tokenFallback",
            "_to": "Address of token receiver.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Allows for an approved third party to transfer tokens from one address to another. Returns success.",
          "params": {
            "_from": "Address from where tokens are withdrawn.",
            "_to": "Address to where tokens are sent.",
            "_value": "Number of tokens to transfer."
          },
          "return": "Returns success of function call."
        }
      },
      "title": "Standard token contract - Standard token implementation."
    },
    "metadata": {
      "compiler": {
        "version": "0.4.17+commit.bdeb9e52"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_value",
                "type": "uint256"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "Returns number of allowed tokens that a spender can transfer on behalf of a token owner.",
              "params": {
                "_owner": "Address of token owner.",
                "_spender": "Address of token spender."
              },
              "return": "Returns remaining allowance for spender."
            },
            "approve(address,uint256)": {
              "details": "Sets approved amount of tokens for spender. Returns success.",
              "params": {
                "_spender": "Address of allowed account.",
                "_value": "Number of approved tokens."
              },
              "return": "Returns success of function call."
            },
            "balanceOf(address)": {
              "details": "Returns number of tokens owned by the given address.",
              "params": {
                "_owner": "Address of token owner."
              },
              "return": "Returns balance of owner."
            },
            "transfer(address,uint256)": {
              "details": "Transfers sender's tokens to a given address. Returns success.",
              "params": {
                "_to": "Address of token receiver.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transfer(address,uint256,bytes)": {
              "details": "Function that is called when a user or another contract wants to transfer funds.",
              "params": {
                "_data": "Data to be sent to tokenFallback",
                "_to": "Address of token receiver.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            },
            "transferFrom(address,address,uint256)": {
              "details": "Allows for an approved third party to transfer tokens from one address to another. Returns success.",
              "params": {
                "_from": "Address from where tokens are withdrawn.",
                "_to": "Address to where tokens are sent.",
                "_value": "Number of tokens to transfer."
              },
              "return": "Returns success of function call."
            }
          },
          "title": "Standard token contract - Standard token implementation."
        },
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "Allows `_spender` to transfer `_value` tokens from `msg.sender` to any address."
            },
            "transfer(address,uint256)": {
              "notice": "Send `_value` tokens to `_to` from `msg.sender`."
            },
            "transfer(address,uint256,bytes)": {
              "notice": "Send `_value` tokens to `_to` from `msg.sender` and trigger tokenFallback if sender is a contract."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `_value` tokens from `_from` to `_to` if `msg.sender` is allowed."
            }
          }
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/test/StandardToken.sol": "StandardToken"
        },
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "contracts/Token.sol": {
          "keccak256": "0x1e5e5ba7b6f38523dc1faa1e2c0af2c78614b64143e3b209095982c5ec657bf0",
          "urls": [
            "bzzr://c54e35e2b7062c8d3da72f884ce75ace360922cf7b2abf035dbc4ec0ff6a9597"
          ]
        },
        "contracts/test/ERC223ReceivingContract.sol": {
          "keccak256": "0xc1e82e44f83aead783d0088b50e88caf9c39e21288985eaa207768d5db604f35",
          "urls": [
            "bzzr://2abdc354558b80f5e3ec08e4ca6e9a1b7cacf45c726a4b0b93d27cecd6e338d2"
          ]
        },
        "contracts/test/StandardToken.sol": {
          "keccak256": "0x4e5fe4180c1409652b9950e64cde6ea860a4917a061b486af769a6a88e24f798",
          "urls": [
            "bzzr://0bb170e4b6e73cdcbb7f3d18459200695f39bddafdf4d9774c0f3b010f4a9a45"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {
        "approve(address,uint256)": {
          "notice": "Allows `_spender` to transfer `_value` tokens from `msg.sender` to any address."
        },
        "transfer(address,uint256)": {
          "notice": "Send `_value` tokens to `_to` from `msg.sender`."
        },
        "transfer(address,uint256,bytes)": {
          "notice": "Send `_value` tokens to `_to` from `msg.sender` and trigger tokenFallback if sender is a contract."
        },
        "transferFrom(address,address,uint256)": {
          "notice": "Transfer `_value` tokens from `_from` to `_to` if `msg.sender` is allowed."
        }
      }
    }
  },
  "Token": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_spender",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_from",
            "type": "address"
          },
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "balance",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_to",
            "type": "address"
          },
          {
            "name": "_value",
            "type": "uint256"
          },
          {
            "name": "_data",
            "type": "bytes"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "success",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "remaining",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "_spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "_value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      }
    ],
    "bytecode": "0x",
    "bytecode_runtime": "0x",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "params": {
            "_owner": "The address of the account owning tokens.",
            "_spender": "The address of the account able to transfer the tokens."
          },
          "return": "Amount of remaining tokens allowed to spent."
        },
        "approve(address,uint256)": {
          "params": {
            "_spender": "The address of the account able to transfer the tokens.",
            "_value": "The amount of tokens to be approved for transfer."
          },
          "return": "Whether the approval was successful or not."
        },
        "balanceOf(address)": {
          "params": {
            "_owner": "The address from which the balance will be retrieved."
          },
          "return": "The balance."
        },
        "transfer(address,uint256)": {
          "params": {
            "_to": "The address of the recipient.",
            "_value": "The amount of token to be transferred."
          },
          "return": "Whether the transfer was successful or not."
        },
        "transfer(address,uint256,bytes)": {
          "params": {
            "_data": "Data to be sent to `tokenFallback.",
            "_to": "The address of the recipient.",
            "_value": "The amount of token to be transferred."
          },
          "return": "Returns success of function call."
        },
        "transferFrom(address,address,uint256)": {
          "params": {
            "_from": "The address of the sender.",
            "_to": "The address of the recipient.",
            "_value": "The amount of token to be transferred."
          },
          "return": "Whether the transfer was successful or not."
        }
      },
      "title": "Base Token contract - Functions to be implemented by token contracts."
    },
    "metadata": null,
    "userdoc": {
      "methods": {
        "approve(address,uint256)": {
          "notice": "`msg.sender` approves `_spender` to spend `_value` tokens."
        },
        "transfer(address,uint256)": {
          "notice": "send `_value` token to `_to` from `msg.sender`."
        },
        "transfer(address,uint256,bytes)": {
          "notice": "send `_value` token to `_to` from `msg.sender`."
        },
        "transferFrom(address,address,uint256)": {
          "notice": "send `_value` token to `_to` from `_from` on the condition it is approved by `_from`."
        }
      }
    }
  }
}